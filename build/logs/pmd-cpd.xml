<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
  <duplication lines="41" tokens="35">
    <file path="/Users/danny/NetBeansProjects/puml/src/Puml/Model/MethodParameter.php" line="38"/>
    <file path="/Users/danny/NetBeansProjects/puml/src/Puml/Model/ObjectItem.php" line="74"/>
    <codefragment>    public function getName()
    {
        return $this-&gt;name;
    }

    /**
     * Set the name of this object instance
     *
     * @param string $name
     *
     * @return \Puml\Model\MethodParameter
     * @since 0.1
     */
    public function setName($name)
    {
        $this-&gt;name = $name;
        return $this;
    }

    /**
     * Get the type of this object instance
     *
     * @return mixed
     * @since 0.1
     */
    public function getType()
    {
        return $this-&gt;type;
    }

    /**
     * Set the type of this object instance
     *
     * @param string $type
     *
     * @return \Puml\Model\MethodParameter
     * @since 0.1
     */
    public function setType($type)
    {
        $this-&gt;type = $type;
</codefragment>
  </duplication>
  <duplication lines="33" tokens="39">
    <file path="/Users/danny/NetBeansProjects/puml/vendor/symfony/console/Symfony/Component/Console/Tester/ApplicationTester.php" line="70"/>
    <file path="/Users/danny/NetBeansProjects/puml/vendor/symfony/console/Symfony/Component/Console/Tester/CommandTester.php" line="68"/>
    <codefragment>        return $this-&gt;application-&gt;run($this-&gt;input, $this-&gt;output);
    }

    /**
     * Gets the display returned by the last execution of the application.
     *
     * @return string The display
     */
    public function getDisplay()
    {
        rewind($this-&gt;output-&gt;getStream());

        return stream_get_contents($this-&gt;output-&gt;getStream());
    }

    /**
     * Gets the input instance used by the last execution of the application.
     *
     * @return InputInterface The current input instance
     */
    public function getInput()
    {
        return $this-&gt;input;
    }

    /**
     * Gets the output instance used by the last execution of the application.
     *
     * @return OutputInterface The current output instance
     */
    public function getOutput()
    {
        return $this-&gt;output;
</codefragment>
  </duplication>
  <duplication lines="19" tokens="92">
    <file path="/Users/danny/NetBeansProjects/puml/vendor/symfony/console/Symfony/Component/Console/Tests/Tester/ApplicationTesterTest.php" line="44"/>
    <file path="/Users/danny/NetBeansProjects/puml/vendor/symfony/console/Symfony/Component/Console/Tests/Tester/CommandTesterTest.php" line="42"/>
    <codefragment>        $this-&gt;assertFalse($this-&gt;tester-&gt;getInput()-&gt;isInteractive(), '-&gt;execute() takes an interactive option');
        $this-&gt;assertFalse($this-&gt;tester-&gt;getOutput()-&gt;isDecorated(), '-&gt;execute() takes a decorated option');
        $this-&gt;assertEquals(Output::VERBOSITY_VERBOSE, $this-&gt;tester-&gt;getOutput()-&gt;getVerbosity(), '-&gt;execute() takes a verbosity option');
    }

    public function testGetInput()
    {
        $this-&gt;assertEquals('bar', $this-&gt;tester-&gt;getInput()-&gt;getArgument('foo'), '-&gt;getInput() returns the current input instance');
    }

    public function testGetOutput()
    {
        rewind($this-&gt;tester-&gt;getOutput()-&gt;getStream());
        $this-&gt;assertEquals('foo'.PHP_EOL, stream_get_contents($this-&gt;tester-&gt;getOutput()-&gt;getStream()), '-&gt;getOutput() returns the current output instance');
    }

    public function testGetDisplay()
    {
        $this-&gt;assertEquals('foo'.PHP_EOL, $this-&gt;tester-&gt;getDisplay(), '-&gt;getDisplay() returns the display of the last execution');
</codefragment>
  </duplication>
</pmd-cpd>
